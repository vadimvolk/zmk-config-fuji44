/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp Q              &kp W             &kp E            &kp R                &kp T          &kp Y        &kp U                 &kp I             &kp O              &kp P                       &kp MINUS
&kp LCTRL  &hrm LEFT_SHIFT A  &hrm LCTRL S      &hrm LEFT_ALT D  &hrm LEFT_COMMAND F  &kp G          &kp H        &hrm RIGHT_COMMAND J  &hrm RIGHT_ALT K  &hrm RCTRL L       &hrm RIGHT_SHIFT SEMICOLON  &kp SQT
&kp TAB    &kp Z              &kp X             &kp C            &kp V                &kp B          &kp N        &kp M                 &kp COMMA         &kp DOT            &kp FSLH                    &kp RIGHT_SHIFT
                              &kp LEFT_BRACKET  &kp LGUI         &lt 3 DOT            &lt 5 ENTER    &lt 2 SPACE  &lt 4 COMMA           &kp RALT          &kp RIGHT_BRACKET
            >;
        };

        ru {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans
                &trans  &trans  &trans  &trans    &trans  &trans  &trans            &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans     &trans     &trans    &trans    &trans    &trans  &trans         &kp UP     &trans     &trans        &trans
&trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans    &trans  &kp LEFT       &kp DOWN   &kp RIGHT  &kp BSPC      &trans
&trans  &kp Z      &kp X      &kp C     &kp V     &trans    &trans  &kp PAGE_DOWN  &kp PG_UP  &kp END    &kp RA(BSPC)  &trans
                   &trans     &trans    &trans    &trans    &trans  &trans         &trans     &trans
            >;
        };

        num {
            bindings = <
&trans                 &trans     &trans        &trans        &trans        &kp PLUS        &kp LS(PLUS)   &kp N7  &kp N8  &kp N9  &trans        &trans
&kp COMMA              &kp LSHFT  &kp LCTRL     &kp LALT      &kp LGUI      &kp EQUAL       &kp N0         &kp N1  &kp N2  &kp N3  &kp BSPC      &trans
&kp RIGHT_PARENTHESIS  &kp SLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK    &kp LS(UNDER)  &kp N4  &kp N5  &kp N6  &kp RA(BSPC)  &trans
                                  &kp N0        &trans        &trans        &kp SPACE       &trans         &trans  &trans  &trans
            >;
        };

        fun {
            bindings = <
&kp LEFT_BRACE   &kp MINUS  &kp AMPERSAND          &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp PLUS        &kp F11  &kp F7  &kp F8  &kp F9  &kp BSLH  &trans
&kp COMMA        &kp DOT    &kp DOLLAR             &kp PERCENT   &kp CARET             &kp EQUAL       &kp F10  &kp F1  &kp F2  &kp F3  &kp BSPC  &trans
&kp RIGHT_BRACE  &kp SLASH  &kp EXCL               &kp AT_SIGN   &kp HASH              &kp ASTERISK    &kp F12  &kp F4  &kp F5  &kp F6  &kp BSPC  &trans
                            &kp RIGHT_PARENTHESIS  &kp GRAVE     &trans                &kp SPACE       &trans   &trans  &trans  &trans
            >;
        };

        sys {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &bootloader
&trans       &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans          &trans        &trans        &trans
&sys_reset   &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &sys_reset
                     &trans  &trans  &trans  &trans    &trans  &trans        &trans          &trans
            >;
        };
    };
};
